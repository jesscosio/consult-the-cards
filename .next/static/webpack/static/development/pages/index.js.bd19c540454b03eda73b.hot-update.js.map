{"version":3,"file":"static/webpack/static/development/pages/index.js.bd19c540454b03eda73b.hot-update.js","sources":["webpack:///./pages/boards/celtic-cross.js"],"sourcesContent":["\nimport {cards} from \"../../data/cards\";\nimport Card from \"../../components/cards/Card\";\n\n\nconst NUMCARDS = 10;\nconst NUMDECK = 78;\n\n/** will return a random integer between 1 and 78 (number of tarot cards) */\nfunction getRandomInt() {\n    return Math.floor(Math.random() * Math.floor(NUMDECK));\n}\n\nfunction getRandomCards() {\n    let cardList = [];\n    const cardsArr = Array.from(cards);\n\n    while(cardList.length < NUMCARDS) {\n        const index = getRandomInt();\n        const cardToAdd = cardsArr[index];\n        if(! cardList.find((someCard)=> someCard === cardToAdd)) {\n            cardList.push(cardToAdd);\n        }\n        \n    }\n    return cardList;\n}\n\nclass CelticCross extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n          cards: [],\n          flipIndex: 1\n        };\n    }\n\n    componentDidMount() {\n        const res = getRandomCards();\n        console.log(res);\n    \n        this.setState({cards: res});   \n    }\n\n    flipCard() {\n        this.setState({flipIndex: this.state.flipIndex + 1});\n\n        console.log((document.getElementsByClassName('card-'+ this.state.flipIndex)));\n        console.log((document.getElementsByClassName('card-'+ this.state.flipIndex))[0]);\n\n        (document.getElementsByClassName('card-'+ this.state.flipIndex))[0].style.display = \"inherit\";\n    }\n  \n    render() {\n        \n      return (\n        <div>\n            <button onClick={()=>this.flipCard()}>draw next</button>\n            <label for=\"cars\">Select the Significator of the person or thing about whom or which the inquiry is made.  \n            It is the card which, in the reader's judgment or experience, \n            is the most representative, and is not, therefore, \n            of necessity the Magician or High Priestess mentioned in the official divinatory meanings. </label>\n                <select id=\"cars\">\n                    <option value=\"volvo\">Volvo</option>\n                    <option value=\"saab\">Saab</option>\n                    <option value=\"mercedes\">Mercedes</option>\n                    <option value=\"audi\">Audi</option>\n                </select>\n            <ul>\n                {this.state.cards.map((card,index) => (\n                    <li className={`face card-${index+1}`} key={card.name}>\n                        <span>{card.name}</span>\n                        <span className=\"cardNumLabel\">{index + 1}</span>\n                    </li>\n                ))}\n            </ul>\n            <style jsx>{`\n\n        ul {\n          padding: 0;\n          position: relative;\n          height: 100vh;\n        }\n\n        .card-1 {\n            position: absolute;\n            top: 200px;\n            left: 150px;\n        }\n\n        .card-2 {\n            float: left;\n            position: absolute;\n            transform: rotate(90deg);\n            top: 205px;\n            left: 150px;\n        }\n\n        .card-3 {\n            position: absolute;\n            top: 0;\n            left: 150px;\n        }\n\n        .card-4 {\n            position: absolute;\n            top: 400px;\n            left: 150px;\n        }\n\n        .card-5{\n            position: absolute;\n            top: 200px;\n            left: 300px;\n        }\n\n        .card-6 {\n            position: absolute;\n            top: 200px;\n            left: 0;\n        }\n        .card-7 {\n            position: absolute;\n            bottom: 40px;\n            right: 0;\n        }\n        .card-8 {\n            position: absolute;\n            right: 0;\n            bottom: 200px;\n        }\n        .card-9 {\n            position: absolute;\n            top: 160px;\n            right: 0;\n        }\n        .card-10 {\n            position: absolute;\n            top: 0;\n            right: 0;\n        }\n\n        .flipped {\n            display: inherit;\n        }\n\n        .face {\n          background: maroon;\n          display: none;\n          padding: 5px;\n          margin: auto;\n          height: 130px;\n          width: 90px;\n          list-style:none;\n          text-align: center;\n          z-index:1;\n        }\n\n        .face:hover {\n            z-index: 2;\n        }\n\n        .cardNumLabel {\n            display: block;\n            margin: 5px;\n            font-weight:bold;\n\n        }\n      `}</style>\n         </div>\n         \n      );\n    }\n  }\n\n  export default CelticCross;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAGA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AATA;AACA;AAGA;AAAA;AAOA;AACA;AAAA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;;;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAbA;AAAA;AAAA;AAoHA;;;;AAhJA;AACA;AAkJA;;;;A","sourceRoot":""}