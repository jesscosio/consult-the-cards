{"version":3,"file":"static/webpack/static/development/pages/index.js.317b7ffe0800051900eb.hot-update.js","sources":["webpack:///./pages/boards/celtic-cross.js"],"sourcesContent":["\nimport {cards} from \"../../data/cards\";\nimport Card from \"../../components/cards/Card\";\n\n\nconst NUMCARDS = 10;\nconst NUMDECK = 78;\n\n/** will return a random integer between 1 and 78 (number of tarot cards) */\nfunction getRandomInt() {\n    return Math.floor(Math.random() * Math.floor(NUMDECK));\n}\n\nfunction getRandomCards() {\n    let cardList = [];\n    const cardsArr = Array.from(cards);\n\n    while(cardList.length < NUMCARDS) {\n        const index = getRandomInt();\n        const cardToAdd = cardsArr[index];\n        if(! cardList.find((someCard)=> someCard === cardToAdd)) {\n            cardList.push(cardToAdd);\n        }\n        \n    }\n    return cardList;\n}\n\n\n// let cx = classNames.bind(styles);\n\nclass CelticCross extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {cards: []};\n    }\n\n    componentDidMount() {\n        const res = getRandomCards();\n        console.log(res);\n    \n        this.setState({cards: res});\n    }\n  \n    render() {\n        \n      return (\n        <div>\n            <ul>\n                {this.state.cards.map((card,index) => (\n                    <li className=\"back\" key=\"{index}\">\n                        <span>{card.name}</span>\n                    </li>\n                ))}\n            </ul>\n            <style jsx>{`\n\n        ul {\n          padding: 0;\n        }\n\n        .back {\n          background: maroon;\n          padding: 5px;\n          margin: 5px;\n          height: 150px;\n          width: 110px;\n          list-style:none;\n        }\n      `}</style>\n         </div>\n         \n      );\n    }\n  }\n\n  export default CelticCross;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAGA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AATA;AACA;AAGA;AAAA;AAOA;AACA;AAAA;AACA;AACA;AACA;AAGA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AAGA;AACA;;;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;;;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAFA;AAAA;AAAA;AA0BA;;;;AA1CA;AACA;AA4CA;;;;A","sourceRoot":""}