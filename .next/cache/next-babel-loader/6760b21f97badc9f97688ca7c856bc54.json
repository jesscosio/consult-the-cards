{"ast":null,"code":"var _jsxFileName = \"/Users/jess/Desktop/projects/web/tarot-app/pages/boards/celtic-cross.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { cards } from \"../../data/cards\";\nimport Card from \"../../components/cards/Card\";\nconst NUMCARDS = 10;\nconst NUMDECK = 78;\n/** will return a random integer between 1 and 78 (number of tarot cards) */\n\nfunction getRandomInt() {\n  return Math.floor(Math.random() * Math.floor(NUMDECK));\n}\n\nfunction getRandomCards() {\n  let cardList = [];\n  const cardsArr = Array.from(cards);\n\n  while (cardList.length < NUMCARDS) {\n    const index = getRandomInt();\n    const cardToAdd = cardsArr[index];\n\n    if (!cardList.find(someCard => someCard === cardToAdd)) {\n      cardList.push(cardToAdd);\n    }\n  }\n\n  return cardList;\n}\n\nclass CelticCross extends React.Component {\n  constructor(props) {\n    super(props); //   this.state = {cards: []};\n  }\n\n  componentDidMount() {\n    const res = getRandomCards();\n    console.log(res);\n    return {\n      cards: res\n    };\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, __jsx(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.state.cards.map(card => __jsx(\"li\", {\n      key: card.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, card.name)))));\n  }\n\n}\n\nexport default CelticCross;","map":{"version":3,"sources":["/Users/jess/Desktop/projects/web/tarot-app/pages/boards/celtic-cross.js"],"names":["cards","Card","NUMCARDS","NUMDECK","getRandomInt","Math","floor","random","getRandomCards","cardList","cardsArr","Array","from","length","index","cardToAdd","find","someCard","push","CelticCross","React","Component","constructor","props","componentDidMount","res","console","log","render","state","map","card","name"],"mappings":";;;AACA,SAAQA,KAAR,QAAoB,kBAApB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AAEA,MAAMC,QAAQ,GAAG,EAAjB;AACA,MAAMC,OAAO,GAAG,EAAhB;AAEA;;AACA,SAASC,YAAT,GAAwB;AACpB,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAWH,OAAX,CAA3B,CAAP;AACH;;AAED,SAASK,cAAT,GAA0B;AACtB,MAAIC,QAAQ,GAAG,EAAf;AACA,QAAMC,QAAQ,GAAGC,KAAK,CAACC,IAAN,CAAWZ,KAAX,CAAjB;;AAEA,SAAMS,QAAQ,CAACI,MAAT,GAAkBX,QAAxB,EAAkC;AAC9B,UAAMY,KAAK,GAAGV,YAAY,EAA1B;AACA,UAAMW,SAAS,GAAGL,QAAQ,CAACI,KAAD,CAA1B;;AACA,QAAG,CAAEL,QAAQ,CAACO,IAAT,CAAeC,QAAD,IAAaA,QAAQ,KAAKF,SAAxC,CAAL,EAAyD;AACrDN,MAAAA,QAAQ,CAACS,IAAT,CAAcH,SAAd;AACH;AAEJ;;AACD,SAAON,QAAP;AACH;;AAGD,MAAMU,WAAN,SAA0BC,KAAK,CAACC,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAEnB;AACC;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,GAAG,GAAGjB,cAAc,EAA1B;AACAkB,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAEA,WAAO;AACLzB,MAAAA,KAAK,EAAEyB;AADF,KAAP;AAGH;;AAEDG,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKC,KAAL,CAAW7B,KAAX,CAAiB8B,GAAjB,CAAqBC,IAAI,IACtB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOD,IAAI,CAACC,IAAZ,CADJ,CADH,CADL,CADJ,CADF;AAWD;;AA3BqC;;AA8BxC,eAAeb,WAAf","sourcesContent":["\nimport {cards} from \"../../data/cards\";\nimport Card from \"../../components/cards/Card\";\n\nconst NUMCARDS = 10;\nconst NUMDECK = 78;\n\n/** will return a random integer between 1 and 78 (number of tarot cards) */\nfunction getRandomInt() {\n    return Math.floor(Math.random() * Math.floor(NUMDECK));\n}\n\nfunction getRandomCards() {\n    let cardList = [];\n    const cardsArr = Array.from(cards);\n\n    while(cardList.length < NUMCARDS) {\n        const index = getRandomInt();\n        const cardToAdd = cardsArr[index];\n        if(! cardList.find((someCard)=> someCard === cardToAdd)) {\n            cardList.push(cardToAdd);\n        }\n        \n    }\n    return cardList;\n}\n\n\nclass CelticCross extends React.Component {\n    constructor(props) {\n      super(props);\n    //   this.state = {cards: []};\n    }\n\n    componentDidMount() {\n        const res = getRandomCards();\n        console.log(res);\n    \n        return {\n          cards: res\n        };\n    }\n  \n    render() {\n      return (\n        <div>\n            <ul>\n                {this.state.cards.map(card => (\n                    <li key={card.name}>\n                        <span>{card.name}</span>\n                    </li>\n                ))}\n            </ul>\n         </div>\n      );\n    }\n  }\n\n  export default CelticCross;"]},"metadata":{},"sourceType":"module"}