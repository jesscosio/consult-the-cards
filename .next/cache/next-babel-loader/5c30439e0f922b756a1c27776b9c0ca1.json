{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nvar _jsxFileName = \"/Users/jess/Desktop/projects/web/tarot-app/pages/boards/celtic-cross.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { cards } from \"../../data/cards\";\nimport Card from \"../../components/cards/Card\";\nvar NUMCARDS = 10;\nvar NUMDECK = 78;\n/** will return a random integer between 1 and 78 (number of tarot cards) */\n\nfunction getRandomInt() {\n  return Math.floor(Math.random() * Math.floor(NUMDECK));\n}\n\nfunction getRandomCards() {\n  var cardList = [];\n\n  var cardsArr = _Array$from(cards);\n\n  var _loop = function _loop() {\n    var index = getRandomInt();\n    var cardToAdd = cardsArr[index];\n\n    if (!cardList.find(function (someCard) {\n      return someCard === cardToAdd;\n    })) {\n      cardList.push(cardToAdd);\n    }\n  };\n\n  while (cardList.length < NUMCARDS) {\n    _loop();\n  }\n\n  return cardList;\n} // let cx = classNames.bind(styles);\n\n\nvar CelticCross =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CelticCross, _React$Component);\n\n  function CelticCross(props) {\n    var _this;\n\n    _classCallCheck(this, CelticCross);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CelticCross).call(this, props));\n    _this.state = {\n      cards: []\n    };\n    return _this;\n  }\n\n  _createClass(CelticCross, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var res = getRandomCards();\n      console.log(res);\n      this.setState({\n        cards: res\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"jsx-770232614\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, __jsx(\"ul\", {\n        className: \"jsx-770232614\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.state.cards.map(function (card, index) {\n        return __jsx(\"li\", {\n          key: card.name,\n          className: \"jsx-770232614\" + \" \" + \"back card-\".concat(index + 1),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, __jsx(\"span\", {\n          className: \"jsx-770232614\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, card.name), __jsx(\"span\", {\n          className: \"jsx-770232614\" + \" \" + \"cardNumLabel\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, index + 1));\n      })), __jsx(_JSXStyle, {\n        id: \"770232614\",\n        __self: this\n      }, \"ul.jsx-770232614{padding:0;position:relative;}.card-1.jsx-770232614{position:absolute;top:250px;}.card-2.jsx-770232614{float:left;position:absolute;-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg);top:250px;}.card-3.jsx-770232614{position:absolute;top:0;}.card-4.jsx-770232614{position:absolute;top:450px;}.card-5.jsx-770232614{position:absolute;float:right;}.card-6.jsx-770232614{position:absolute;float:left;}.back.jsx-770232614{background:maroon;padding:5px;margin:5px;height:150px;width:110px;list-style:none;}.cardNumLabel.jsx-770232614{display:block;margin:5px;font-weight:bold;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXNzL0Rlc2t0b3AvcHJvamVjdHMvd2ViL3Rhcm90LWFwcC9wYWdlcy9ib2FyZHMvY2VsdGljLWNyb3NzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXdEd0IsQUFJcUIsQUFLVSxBQUtQLEFBT08sQUFLQSxBQUtBLEFBS0EsQUFLRixBQVNGLFVBN0NFLENBVUUsR0FvQ1AsSUF6Q0QsQUFZSixBQUtJLEFBS0UsQUFLRCxBQUtELE1BbkJkLENBNkJvQixHQTlDcEIsQUFLQSxBQWlCQSxDQVo0QixBQXNCNUIsQ0FMQSxBQVVhLFdBQ0UsQ0FVZixZQVRjLFlBQ0csZ0JBQ2pCLCtCQTlCYyxVQUNkIiwiZmlsZSI6Ii9Vc2Vycy9qZXNzL0Rlc2t0b3AvcHJvamVjdHMvd2ViL3Rhcm90LWFwcC9wYWdlcy9ib2FyZHMvY2VsdGljLWNyb3NzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQge2NhcmRzfSBmcm9tIFwiLi4vLi4vZGF0YS9jYXJkc1wiO1xuaW1wb3J0IENhcmQgZnJvbSBcIi4uLy4uL2NvbXBvbmVudHMvY2FyZHMvQ2FyZFwiO1xuXG5cbmNvbnN0IE5VTUNBUkRTID0gMTA7XG5jb25zdCBOVU1ERUNLID0gNzg7XG5cbi8qKiB3aWxsIHJldHVybiBhIHJhbmRvbSBpbnRlZ2VyIGJldHdlZW4gMSBhbmQgNzggKG51bWJlciBvZiB0YXJvdCBjYXJkcykgKi9cbmZ1bmN0aW9uIGdldFJhbmRvbUludCgpIHtcbiAgICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogTWF0aC5mbG9vcihOVU1ERUNLKSk7XG59XG5cbmZ1bmN0aW9uIGdldFJhbmRvbUNhcmRzKCkge1xuICAgIGxldCBjYXJkTGlzdCA9IFtdO1xuICAgIGNvbnN0IGNhcmRzQXJyID0gQXJyYXkuZnJvbShjYXJkcyk7XG5cbiAgICB3aGlsZShjYXJkTGlzdC5sZW5ndGggPCBOVU1DQVJEUykge1xuICAgICAgICBjb25zdCBpbmRleCA9IGdldFJhbmRvbUludCgpO1xuICAgICAgICBjb25zdCBjYXJkVG9BZGQgPSBjYXJkc0FycltpbmRleF07XG4gICAgICAgIGlmKCEgY2FyZExpc3QuZmluZCgoc29tZUNhcmQpPT4gc29tZUNhcmQgPT09IGNhcmRUb0FkZCkpIHtcbiAgICAgICAgICAgIGNhcmRMaXN0LnB1c2goY2FyZFRvQWRkKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICB9XG4gICAgcmV0dXJuIGNhcmRMaXN0O1xufVxuXG5cbi8vIGxldCBjeCA9IGNsYXNzTmFtZXMuYmluZChzdHlsZXMpO1xuXG5jbGFzcyBDZWx0aWNDcm9zcyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgIHRoaXMuc3RhdGUgPSB7Y2FyZHM6IFtdfTtcbiAgICB9XG5cbiAgICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgICAgY29uc3QgcmVzID0gZ2V0UmFuZG9tQ2FyZHMoKTtcbiAgICAgICAgY29uc29sZS5sb2cocmVzKTtcbiAgICBcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7Y2FyZHM6IHJlc30pO1xuICAgIH1cbiAgXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgICAge3RoaXMuc3RhdGUuY2FyZHMubWFwKChjYXJkLGluZGV4KSA9PiAoXG4gICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9e2BiYWNrIGNhcmQtJHtpbmRleCsxfWB9IGtleT17Y2FyZC5uYW1lfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPntjYXJkLm5hbWV9PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiY2FyZE51bUxhYmVsXCI+e2luZGV4ICsgMX08L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxuXG4gICAgICAgIHVsIHtcbiAgICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5jYXJkLTEge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgdG9wOiAyNTBweDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5jYXJkLTIge1xuICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7XG4gICAgICAgICAgICB0b3A6IDI1MHB4O1xuICAgICAgICB9XG5cbiAgICAgICAgLmNhcmQtMyB7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0b3A6IDA7XG4gICAgICAgIH1cblxuICAgICAgICAuY2FyZC00IHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHRvcDogNDUwcHg7XG4gICAgICAgIH1cblxuICAgICAgICAuY2FyZC01e1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgICB9XG5cbiAgICAgICAgLmNhcmQtNiB7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5iYWNrIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiBtYXJvb247XG4gICAgICAgICAgcGFkZGluZzogNXB4O1xuICAgICAgICAgIG1hcmdpbjogNXB4O1xuICAgICAgICAgIGhlaWdodDogMTUwcHg7XG4gICAgICAgICAgd2lkdGg6IDExMHB4O1xuICAgICAgICAgIGxpc3Qtc3R5bGU6bm9uZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5jYXJkTnVtTGFiZWwge1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICBtYXJnaW46IDVweDtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OmJvbGQ7XG5cbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgICAgICAgPC9kaXY+XG4gICAgICAgICBcbiAgICAgICk7XG4gICAgfVxuICB9XG5cbiAgZXhwb3J0IGRlZmF1bHQgQ2VsdGljQ3Jvc3M7Il19 */\\n/*@ sourceURL=/Users/jess/Desktop/projects/web/tarot-app/pages/boards/celtic-cross.js */\"));\n    }\n  }]);\n\n  return CelticCross;\n}(React.Component);\n\nexport default CelticCross;","map":{"version":3,"sources":["/Users/jess/Desktop/projects/web/tarot-app/pages/boards/celtic-cross.js"],"names":["cards","Card","NUMCARDS","NUMDECK","getRandomInt","Math","floor","random","getRandomCards","cardList","cardsArr","index","cardToAdd","find","someCard","push","length","CelticCross","props","state","res","console","log","setState","map","card","name","React","Component"],"mappings":";;;;;;;;;;AACA,SAAQA,KAAR,QAAoB,kBAApB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AAGA,IAAMC,QAAQ,GAAG,EAAjB;AACA,IAAMC,OAAO,GAAG,EAAhB;AAEA;;AACA,SAASC,YAAT,GAAwB;AACpB,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAWH,OAAX,CAA3B,CAAP;AACH;;AAED,SAASK,cAAT,GAA0B;AACtB,MAAIC,QAAQ,GAAG,EAAf;;AACA,MAAMC,QAAQ,GAAG,YAAWV,KAAX,CAAjB;;AAFsB;AAKlB,QAAMW,KAAK,GAAGP,YAAY,EAA1B;AACA,QAAMQ,SAAS,GAAGF,QAAQ,CAACC,KAAD,CAA1B;;AACA,QAAG,CAAEF,QAAQ,CAACI,IAAT,CAAc,UAACC,QAAD;AAAA,aAAaA,QAAQ,KAAKF,SAA1B;AAAA,KAAd,CAAL,EAAyD;AACrDH,MAAAA,QAAQ,CAACM,IAAT,CAAcH,SAAd;AACH;AATiB;;AAItB,SAAMH,QAAQ,CAACO,MAAT,GAAkBd,QAAxB,EAAkC;AAAA;AAOjC;;AACD,SAAOO,QAAP;AACH,C,CAGD;;;IAEMQ,W;;;;;AACF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAACnB,MAAAA,KAAK,EAAE;AAAR,KAAb;AAFiB;AAGlB;;;;wCAEmB;AAChB,UAAMoB,GAAG,GAAGZ,cAAc,EAA1B;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAEA,WAAKG,QAAL,CAAc;AAACvB,QAAAA,KAAK,EAAEoB;AAAR,OAAd;AACH;;;6BAEQ;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKD,KAAL,CAAWnB,KAAX,CAAiBwB,GAAjB,CAAqB,UAACC,IAAD,EAAMd,KAAN;AAAA,eAClB;AAAuC,UAAA,GAAG,EAAEc,IAAI,CAACC,IAAjD;AAAA,iEAA4Bf,KAAK,GAAC,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOc,IAAI,CAACC,IAAZ,CADJ,EAEI;AAAA,6CAAgB,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAgCf,KAAK,GAAG,CAAxC,CAFJ,CADkB;AAAA,OAArB,CADL,CADJ;AAAA;AAAA;AAAA,gpJADF;AAoED;;;;EAnFqBgB,KAAK,CAACC,S;;AAsF9B,eAAeX,WAAf","sourcesContent":["\nimport {cards} from \"../../data/cards\";\nimport Card from \"../../components/cards/Card\";\n\n\nconst NUMCARDS = 10;\nconst NUMDECK = 78;\n\n/** will return a random integer between 1 and 78 (number of tarot cards) */\nfunction getRandomInt() {\n    return Math.floor(Math.random() * Math.floor(NUMDECK));\n}\n\nfunction getRandomCards() {\n    let cardList = [];\n    const cardsArr = Array.from(cards);\n\n    while(cardList.length < NUMCARDS) {\n        const index = getRandomInt();\n        const cardToAdd = cardsArr[index];\n        if(! cardList.find((someCard)=> someCard === cardToAdd)) {\n            cardList.push(cardToAdd);\n        }\n        \n    }\n    return cardList;\n}\n\n\n// let cx = classNames.bind(styles);\n\nclass CelticCross extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {cards: []};\n    }\n\n    componentDidMount() {\n        const res = getRandomCards();\n        console.log(res);\n    \n        this.setState({cards: res});\n    }\n  \n    render() {\n        \n      return (\n        <div>\n            <ul>\n                {this.state.cards.map((card,index) => (\n                    <li className={`back card-${index+1}`} key={card.name}>\n                        <span>{card.name}</span>\n                        <span className=\"cardNumLabel\">{index + 1}</span>\n                    </li>\n                ))}\n            </ul>\n            <style jsx>{`\n\n        ul {\n          padding: 0;\n          position: relative;\n        }\n\n        .card-1 {\n            position: absolute;\n            top: 250px;\n        }\n\n        .card-2 {\n            float: left;\n            position: absolute;\n            transform: rotate(90deg);\n            top: 250px;\n        }\n\n        .card-3 {\n            position: absolute;\n            top: 0;\n        }\n\n        .card-4 {\n            position: absolute;\n            top: 450px;\n        }\n\n        .card-5{\n            position: absolute;\n            float: right;\n        }\n\n        .card-6 {\n            position: absolute;\n            float: left;\n        }\n\n        .back {\n          background: maroon;\n          padding: 5px;\n          margin: 5px;\n          height: 150px;\n          width: 110px;\n          list-style:none;\n        }\n\n        .cardNumLabel {\n            display: block;\n            margin: 5px;\n            font-weight:bold;\n\n        }\n      `}</style>\n         </div>\n         \n      );\n    }\n  }\n\n  export default CelticCross;"]},"metadata":{},"sourceType":"module"}